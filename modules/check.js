import { getPageHtml } from './getPageHtml.js'
import getClanName from './getClanName.js'

const smileyCastles = [
  {name: '–ó–∞–º–æ–∫ –°—Ç—Ä–∞—Ö–∞', smiley: 'üò±'},
  {name: '–ó–∞–º–æ–∫ —Å –ü—Ä–∏–≤–∏–¥–µ–Ω–∏—è–º–∏', smiley: 'üëª'},
  {name: '–ó–∞–º–æ–∫ –°—Ç–∞–ª–∏', smiley: 'üõ°'},
  {name: '–ó–∞–º–æ–∫ –ë–µ–ª–æ–≥–æ –ö–∞–º–Ω—è', smiley: 'üíé'},
]
const storeData = {
  castles: [],
}
const times = ['02', '07', '15']

async function thisCastle (castle) {
  if (storeData.castles.length < 4) {
    let item = {
      name: castle.name,
      smiley: smileyCastles.find(item => item.name === castle.name),
      timeMessageAttack: null,
      thisClan: {
        name: await getClanName(castle.thisClan),
        timeAfterAttack: null,
      },
      attackInfo: {
        startTime: null,
      }
    }
    storeData.castles.push(item)
    return item
  } else return storeData.castles.find(item => item.name === castle.name) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–º –∑–∞–º–∫–µ
}

export async function check(bot) {
  try {
    let data = await getPageHtml()

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–±–∏–≤–æ–≤
    // for (let loc in data.one) {
    //     let thisLoc = data.one[loc]
    //
    //     if(thisLoc.status.includes('–∞—Ç–∞–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å')) {
    //         const timeLeft = thisLoc.status.slice(25, 27)
    //
    //         if(times.includes(timeLeft)) {
    //             bot.telegram.sendMessage(-1001913180942,
    //             `<b>${thisLoc.name}</b>\n`+
    //             `–î–æ –∞—Ç–∞–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å –≥–¥–µ-—Ç–æ ${timeLeft} –º–∏–Ω`, {
    //                 parse_mode: 'HTML'
    //             })
    //         }
    //     } else if(thisLoc.status.includes('–ü—Ä–∏–µ–º –∑–∞—è–≤–æ–∫')) {
    //         bot.telegram.sendMessage(-1001913180942,
    //         `<b>${thisLoc.name}</b>\n`+
    //         `–°–±–æ—Ä –∑–∞—è–≤–æ–∫ –Ω–∞ –∞—Ç–∞–∫—É - <b>–ñ–ú–Ø–ö–ê–ï–ú</b>`, {
    //             parse_mode: 'HTML'
    //         })
    //     }
    // }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞—Ü–∏–π —Å –º–æ–Ω—Å—Ç—Ä–∞–º–∏
    // for (let loc in data.two) {
    //     let thisLoc = data.two[loc]
    //     if(thisLoc.status == 'mobs') {
    //         bot.telegram.sendMessage(-1001913180942,
    //             `<b>${thisLoc.name}</b>\n`+
    //             `–õ–æ–∫–∞—Ü–∏—è –∑–∞–Ω—è—Ç–∞ –º–æ–Ω—Å—Ç—Ä–∞–º–∏`, {
    //             parse_mode: 'HTML'
    //         })
    //     } else if(thisLoc.status) {
    //         const timeLeft = thisLoc.status.timeLeft.slice(25, 27)
    //
    //         if(times.includes(timeLeft) || timeLeft == '14') {
    //             bot.telegram.sendMessage(-1001913180942,
    //             `<b>${thisLoc.name}</b>\n`+
    //             `–î–æ –∞—Ç–∞–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å –≥–¥–µ-—Ç–æ ${timeLeft} –º–∏–Ω`, {
    //                 parse_mode: 'HTML'
    //             })
    //         }
    //     }
    // }
    console.log('*************************************')
    for (let castle of data.castles) {
      let castleState = await thisCastle(castle)

      switch (castle.attackInfo.attack) {
        case "preAttack":
          if (castle.attackInfo.time.indexOf('04') !== -1) {
            castleState.attackInfo.startTime = new Date()
            bot.telegram.sendMessage(process.env.CHAT_ID,
              `${castleState.smiley.smiley}<b>${castle.name}</b>\n`+
              `–¢–µ–∫—É—â–∏–π –∫–ª–∞–Ω: ${await getClanName(castle.thisClan)}\n\n`+
              `–ê—Ç–∞–∫—É—é—â–∏–π –∫–ª–∞–Ω: ${await getClanName(castle.attackInfo.attackClan)}\n`+
              `‚öîÔ∏è–î–æ –∞—Ç–∞–∫–∏ <b>${castle.attackInfo.time}</b>`,
              {parse_mode: 'HTML'}
            )
          }
          break
        case "attack":
        function sendMessage() {
          console.log('–®—Ç—É—Ä–º –Ω–∞—á–∞–ª—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ')
          castleState.timeMessageAttack = new Date()
          bot.telegram.sendMessage(process.env.CHAT_ID,
            `<b>${castle.name}</b>\n`+
            `–®—Ç—É—Ä–º –Ω–∞—á–∞–ª—Å—è!`,
            {parse_mode: 'HTML'}
          )
        }

        if (castleState.timeMessageAttack) {
          if (new Date() - castleState.timeMessageAttack > 900000) {
            sendMessage()
          } else console.log('–®—Ç—É—Ä–º –≤—Å–µ –µ—â–µ –∏–¥–µ—Ç, –∫—Ä–∞–π–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —à—Ç—É—Ä–º–µ –±—ã–ª–æ –º–µ–Ω—å—à–µ 15 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥')
        } else sendMessage()
          break
        case "noAttack":
          if (castle.attackInfo.time === '00 —á 00 –º–∏–Ω') {
            console.log('–®—Ç—É—Ä–º —á–µ—Ä–µ–∑ 4 –º–∏–Ω—É—Ç—ã')
            castleState.thisClan.name = await getClanName(castle.thisClan)
            castleState.timeMessageAttack = null
            bot.telegram.sendMessage(process.env.CHAT_ID,
              `<b>${castle.name}</b>\n`+
              `<b>${await getClanName(castle.thisClan)}</b> —É—Å–ø–µ—à–Ω–æ –∑–∞—Ö–≤–∞—Ç–∏–ª–∏ –∑–∞–º–æ–∫!`,
              {parse_mode: 'HTML'}
            )
          } else if (castleState.thisClan.timeAfterAttack && (castleState.thisClan.timeAfterAttack === castle.attackInfo.time)) {
            console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ —É–¥–∞—á–Ω–æ–º —à—Ç—É—Ä–º–µ')
            castleState.thisClan.timeAfterAttack = null
            bot.telegram.sendMessage(process.env.CHAT_ID,
              `<b>${castle.name}</b>\n`+
              `–®—Ç—É—Ä–º –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –Ω–µ —É–¥–∞—á–Ω–æ, <b>${await getClanName(castle.thisClan)}</b> –æ—Å—Ç–∞—é—Ç—Å—è –≤ –∑–∞–º–∫–µ`,
              {parse_mode: 'HTML'}
            )
          } else {
            castleState.thisClan.timeAfterAttack = castle.attackInfo.time
            console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–µ—à–µ –¥–ª—è: ' + castle.name)
          }
          break
      }

      console.log(castleState)
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–º–∫–æ–≤
    /*for (let castle of data.castles) {

      let castleState = await thisCastle(castle)

      if(castle.attackInfo.attack === 'preAttack' && (castle.attackInfo.time.indexOf('04') !== -1)) {
        bot.telegram.sendMessage(process.env.CHAT_ID,
          `${castleState.smiley.smiley}<b>${castle.name}</b>\n`+
          `–¢–µ–∫—É—â–∏–π –∫–ª–∞–Ω: ${await getClanName(castle.thisClan)}\n\n`+
          `–ê—Ç–∞–∫—É—é—â–∏–π –∫–ª–∞–Ω: ${await getClanName(castle.attackInfo.attackClan)}\n`+
          `‚öîÔ∏è–î–æ –∞—Ç–∞–∫–∏ <b>${castle.attackInfo.time}</b>`,
          {parse_mode: 'HTML'}
        )
      } else if(castle.attackInfo.attack === 'attack') {

        function sendMessage() {
          console.log('–®—Ç—É—Ä–º –Ω–∞—á–∞–ª—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ')
          castleState.timeMessageAttack = new Date()
          bot.telegram.sendMessage(process.env.CHAT_ID,
            `<b>${castle.name}</b>\n`+
            `–®—Ç—É—Ä–º –Ω–∞—á–∞–ª—Å—è!`,
            {parse_mode: 'HTML'}
          )
        }

        if (castleState.timeMessageAttack) {
          if (new Date() - castleState.timeMessageAttack > 900000) {
            sendMessage()
          } else console.log('–®—Ç—É—Ä–º –≤—Å–µ –µ—â–µ –∏–¥–µ—Ç, –∫—Ä–∞–π–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —à—Ç—É—Ä–º–µ –±—ã–ª–æ –º–µ–Ω—å—à–µ 15 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥')
        } else sendMessage()
      } else if (castle.attackInfo.attack === 'noAttack') {
        if (castle.attackInfo.time === '00 —á 00 –º–∏–Ω') {
          castleState.timeMessageAttack = null // –û—á–∏—â–∞–µ–º –∫–µ—à —Å–æ–æ–±—â–µ–Ω–∏—è –æ —à—Ç—É—Ä–º–µ
          bot.telegram.sendMessage(process.env.CHAT_ID,
            `<b>${castle.name}</b>\n`+
            `–ê—Ç–∞–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –≤ –ø–æ–ª—å–∑—É: <b>${await getClanName(castle.thisClan)}</b>`,
            {parse_mode: 'HTML'}
          )
        } else if (castle.attackInfo.time === '') {
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∞—Ç–∞–∫–∞ –ø—Ä–æ—à–ª–∞ –Ω–µ —É–¥–∞—á–Ω–æ –∏ –∫–ª–∞–Ω –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º
        }
      }
    }*/
    console.log('*************************************')
  } catch (e) {
    throw e
  }
}
